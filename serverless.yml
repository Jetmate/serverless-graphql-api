service: graphql-api

provider:
  name: aws
  runtime: nodejs6.10
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:*"

functions:
  graphql:
    handler: src/handler.graphql
    events:
      - http:
          path: /graphql
          method: post
          cors: true
  graphiql:
    handler: src/handler.graphiql
    events:
      - http:
          path: /graphiql
          method: get

resources:
  Resources:
    UsersDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    CoursesDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: courses
        AttributeDefinitions:
          - AttributeName: title
            AttributeType: S
        KeySchema:
          - AttributeName: title
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    LessonsDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: lessons
        AttributeDefinitions:
          - AttributeName: title
            AttributeType: S
          - AttributeName: course
            AttributeType: S
        KeySchema:
          - AttributeName: title
            KeyType: HASH
          - AttributeName: course
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1


plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

custom:
  webpackIncludeModules: true
  serverless-offline:
    babelOptions:
      presets: ["env", "stage-0"]
  dynamodb:
    start:
      migrate: true
